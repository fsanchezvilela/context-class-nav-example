{"version":3,"sources":["styles/NavBarStyles.js","contexts/ThemeContext.js","contexts/LanguageContext.js","Navbar.js","styles/FormStyles.js","Form.js","PageContent.js","App.js","serviceWorker.js","index.js"],"names":["styles","theme","root","width","marginBottom","grow","flexGrow","menuButton","marginLeft","marginRight","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","spacing","searchIcon","height","alignItems","justifyContent","inputRoot","color","inputInput","paddingTop","paddingBottom","paddingRight","paddingLeft","transition","transitions","create","ThemeContext","createContext","ThemeProvider","props","state","isDarkMode","toggleTheme","bind","this","setState","Provider","value","children","Component","LanguageContext","LanguageProvider","language","changeLanguage","e","target","content","english","flag","french","spanish","Navbar","context","classes","languageContext","className","AppBar","Toolbar","IconButton","role","aria-label","Typography","variant","Switch","onChange","Search","InputBase","placeholder","input","contextType","withLangaugeContext","withStyles","Consumer","main","paper","marginTop","flexDirection","padding","avatar","margin","secondary","form","submit","words","signIn","email","password","remember","Form","Paper","Avatar","LockOutlined","Select","MenuItem","FormControl","required","fullwidth","InputLabel","htmlFor","Input","id","autoFocus","name","FormControlLabel","control","Checkbox","label","Button","type","PageContent","style","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2f8643f4.chunk.js","sourcesContent":["import { fade } from \"@material-ui/core/styles/colorManipulator\";\r\n\r\nconst styles = theme => ({\r\n    root:{\r\n        width: \"100%\",\r\n        marginBottom: 0,\r\n    },\r\n    grow:{\r\n        flexGrow:1\r\n    },\r\n    menuButton:{\r\n        marginLeft: \"-12px\",\r\n        marginRight: \"20px\"\r\n    },\r\n    title:{\r\n        display: \"none\",\r\n        [theme.breakpoints.up(\"sm\")]:{\r\n            display: \"block\",\r\n        }\r\n    },\r\n    search:{\r\n       position: \"relative\",\r\n       borderRadius: theme.shape.borderRadius,\r\n       backgroundColor: fade(theme.palette.common.white, 0.15), \r\n       \"&:hover\":{\r\n           backgroundColor: fade(theme.palette.common.white, 0.25)\r\n       },\r\n       marginLeft: 0,\r\n       width: \"100%\",\r\n       [theme.breakpoints.up(\"sm\")]:{\r\n           marginLeft: theme.spacing(),\r\n           width: \"auto\",\r\n       }\r\n    },\r\n    searchIcon:{\r\n        width: theme.spacing(9),\r\n        height: \"100%\",\r\n        position:\"absolute\",\r\n        display: \"flex\",\r\n        alignItems:\"center\",\r\n        justifyContent:\"center\"\r\n    },\r\n    inputRoot:{\r\n        color:\"inherit\",\r\n        width:\"100%\"\r\n    },\r\n    inputInput:{\r\n        paddingTop: theme.spacing(),\r\n        paddingBottom: theme.spacing(),\r\n        paddingRight: theme.spacing(),\r\n        paddingLeft: theme.spacing(10),\r\n        transition: theme.transitions.create(\"width\"),\r\n        width:\"100%\",\r\n        [theme.breakpoints.up('sm')]:{\r\n            width:120,\r\n            \"&:focus\":{\r\n                width:200,\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\nexport default styles;","import React, { Component, createContext } from 'react'\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nclass ThemeProvider extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state= {\r\n            isDarkMode: true,\r\n        }\r\n        this.toggleTheme= this.toggleTheme.bind(this);\r\n    }\r\n    toggleTheme(){\r\n        this.setState({ isDarkMode: !this.state.isDarkMode })\r\n    }\r\n    render(){\r\n        return(\r\n        <ThemeContext.Provider value={{...this.state, toggleTheme: this.toggleTheme}}>\r\n            { this.props.children }\r\n        </ThemeContext.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ThemeProvider;","import React, {Component , createContext} from 'react';\r\n\r\nexport const LanguageContext = createContext();\r\n\r\nexport default class LanguageProvider extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state= {\r\n            language:\"english\"\r\n        }\r\n        this.changeLanguage = this.changeLanguage.bind(this);\r\n    }\r\n    changeLanguage(e){\r\n        this.setState({language: e.target.value});\r\n    }\r\n    render(){\r\n        return(\r\n            <LanguageContext.Provider value={{...this.state, changeLanguage: this.changeLanguage}}>\r\n                {this.props.children}\r\n            </LanguageContext.Provider>\r\n        )\r\n    }\r\n}\r\n\r\n//make a hoc\r\nexport const withLangaugeContext = Component => props => (\r\n    <LanguageContext.Consumer>\r\n        { value => <Component languageContext={value} {...props} />}\r\n    </LanguageContext.Consumer>\r\n)","import React, { Component } from 'react';\r\nimport {\r\n    AppBar,\r\n    Toolbar,\r\n    IconButton,\r\n    Typography,\r\n    InputBase,\r\n    Switch,\r\n} from \"@material-ui/core\";\r\nimport { Search } from \"@material-ui/icons\";\r\n\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport styles from \"./styles/NavBarStyles\";\r\nimport { ThemeContext } from \"./contexts/ThemeContext\";\r\nimport { withLangaugeContext } from \"./contexts/LanguageContext\";\r\n\r\nconst content = {\r\n    english:{\r\n        search:\"Search\",\r\n        flag:\"🇬🇧\", \r\n    },\r\n    french:{\r\n        search:\"Chercher\",\r\n        flag: \"🇫🇷\", \r\n    },\r\n    spanish:{\r\n        search:\"Buscar\",\r\n        flag: \"🇪🇸\", \r\n    }\r\n}\r\n\r\nclass Navbar extends Component {\r\n\r\n    static contextType = ThemeContext;\r\n \r\n    render() {\r\n        const { toggleTheme, isDarkMode } = this.context;\r\n        const { classes } = this.props;\r\n        const { language } = this.props.languageContext;\r\n        const { search , flag } = content[language];\r\n        \r\n        return (\r\n            <div className={classes.root}>\r\n                <AppBar position=\"static\" color={ isDarkMode ? \"default\": \"primary\"}>\r\n                    <Toolbar>\r\n                        <IconButton className={classes.menuButton} color=\"inherit\">\r\n                            <span role=\"img\" aria-label=\"flag-icon\">{flag}</span>\r\n                        </IconButton>\r\n                        <Typography className={classes.title} variant='h6' color='inherit'>\r\n                            App Title \r\n                        </Typography>\r\n                        <Switch onChange={toggleTheme}/>\r\n                        <div className={classes.grow}/>\r\n                        <div className={classes.search}>\r\n                            <div className={classes.searchIcon}>\r\n                                <Search/>\r\n                            </div>\r\n                            <InputBase placeholder={ `${search}...` } classes={{\r\n                                root: classes.inputRoot,\r\n                                input: classes.inputInput,\r\n                            }}/>\r\n                        </div>\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default withLangaugeContext(withStyles(styles)(Navbar));","const styles = theme => ({\r\n    main:{\r\n        width:\"auto\",\r\n        display:\"block\",\r\n        marginLeft: theme.spacing(3),\r\n        marginRight: theme.spacing(3),\r\n        [theme.breakpoints.up('sm')]:{\r\n            width:400,\r\n            marginLeft:\"auto\",\r\n            marginRight:\"auto\",\r\n        }\r\n    },\r\n    paper:{\r\n        marginTop: theme.spacing(8),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems:\"center\",\r\n        padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(3)}px`\r\n    },\r\n    avatar:{\r\n        margin: theme.spacing(),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form:{\r\n        width: \"100%\",\r\n        marginTop: theme.spacing(3),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent:'center',\r\n    },\r\n    submit:{\r\n        width:\"100%\",\r\n        marginTop: theme.spacing(3),\r\n    }\r\n})\r\nexport default styles;","import React, { Component } from 'react';\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  FormControl,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  Input,\r\n  InputLabel,\r\n  Paper,\r\n  Typography,\r\n  MenuItem,\r\n  Select,\r\n} from '@material-ui/core';\r\nimport { LockOutlined } from '@material-ui/icons';\r\n\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport styles from './styles/FormStyles';\r\nimport { LanguageContext } from './contexts/LanguageContext';\r\n\r\nconst words = {\r\n  english: {\r\n    signIn: 'Sign In',\r\n    email: 'Email',\r\n    password: 'Password',\r\n    remember: 'Remember Me',\r\n  },\r\n  french: {\r\n    signIn: 'Se Connecter',\r\n    email: 'Adresse Electronique',\r\n    password: 'Mot de Passe',\r\n    remember: 'Souviens-toi De Moi',\r\n  },\r\n  spanish: {\r\n    signIn: 'Registrarse',\r\n    email: 'Correo Electronico',\r\n    password: 'Contrasena',\r\n    remember: 'Recuerdame',\r\n  },\r\n};\r\n\r\nclass Form extends Component {\r\n  static contextType = LanguageContext;\r\n  render() {\r\n    const { language, changeLanguage } = this.context;\r\n    const { classes } = this.props;\r\n    const { email, signIn, password, remember } = words[language];\r\n    return (\r\n      <main className={classes.main}>\r\n        <Paper className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlined />\r\n          </Avatar>\r\n          <Typography variant=\"h5\">{signIn}</Typography>\r\n          <Select value={language} onChange={changeLanguage}>\r\n            <MenuItem value=\"english\">English</MenuItem>\r\n            <MenuItem value=\"french\">French</MenuItem>\r\n            <MenuItem value=\"spanish\">Spanish</MenuItem>\r\n          </Select>\r\n          <form className={classes.form}>\r\n            <FormControl margin=\"normal\" required fullwidth=\"true\">\r\n              <InputLabel htmlFor=\"email\">{email}</InputLabel>\r\n              <Input id=\"email\" autoFocus name=\"email\"></Input>\r\n            </FormControl>\r\n            <FormControl margin=\"normal\" required fullwidth=\"true\">\r\n              <InputLabel htmlFor=\"password\">{password}</InputLabel>\r\n              <Input id=\"password\" autoFocus name=\"password\"></Input>\r\n            </FormControl>\r\n            <FormControlLabel\r\n              control={<Checkbox color=\"primary\" />}\r\n              label={remember}\r\n            />\r\n            <Button\r\n              variant=\"contained\"\r\n              type=\"submit\"\r\n              fullwidth=\"true\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              {signIn}\r\n            </Button>\r\n          </form>\r\n        </Paper>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Form);\r\n","import React, { Component } from 'react';\r\nimport {ThemeContext} from \"./contexts/ThemeContext\";\r\n\r\nclass PageContent extends Component {\r\n    static contextType = ThemeContext;\r\n    render() {\r\n        const { isDarkMode } = this.context;\r\n        const styles={\r\n            backgroundColor: isDarkMode ? \"black\" : \"white\",\r\n            height:\"100vh\",\r\n            width:\"100vw\",\r\n        }\r\n        return (\r\n            <div style={styles}>\r\n                { this.props.children }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PageContent;\r\n","import React, { Component } from 'react';\nimport Navbar from \"./Navbar\";\nimport Form from \"./Form\";\nimport PageContent from \"./PageContent\";\nimport ThemeProvider from './contexts/ThemeContext';\nimport LanguageProvider from './contexts/LanguageContext';\n\nclass App extends Component {\n  render (){\n    return(\n      <ThemeProvider>\n        <PageContent>\n        <LanguageProvider>\n          <Navbar/>\n          <Form/>\n        </LanguageProvider>\n        </PageContent>\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}